// mixins.scss
@mixin absolutely {
  position: absolute;
  top:0; right:0; bottom:0; left:0;
  margin: auto;
}

@mixin animation($a) {
  -webkit-animation: $a;
  animation: $a;
}

@mixin animation-delay($a) {
  -webkit-animation-delay: $a;
  animation-delay: $a;
}

@mixin clip-path($c) {
  -webkit-clip-path: $c;
  clip-path: $c;
}

// for 'fluid' values ranging between a $start and $end viewport widths
@mixin fp($property, $min, $max, $start: 320, $end: 1920, $clip: true, $clipAtStart: true, $clipAtEnd: true) {
  $multiplier: ($max - $min) / ($end - $start) * 100;
  $adder: ($min * $end - $max * $start) / ($end - $start);
  $formula: calc(#{$multiplier + 0vw} + #{$adder + 0px});
  @if $clip and $clipAtStart {
    @media (max-width: #{$start + 0px}) {
      #{$property}: $min + 0px;
    }
  }
  @if $clip and $clipAtEnd {
    @media (min-width: #{$end + 0px}) {
      #{$property}: $max + 0px;
    }
  }
  #{$property}: $formula;
}


@mixin transform($t){
  -webkit-transform: $t;
  -ms-transform: $t;
  transform: $t;
}

%cf {
  *zoom: 1;
  &:before, &:after {
    content:" ";
    display: table;
  }
  &:after {
    clear: both;
  }
}

%ellipsis {
  overflow: hidden;
  white-space: nowrap;
  text-overflow: ellipsis; 
}

%sr-only {
  position: absolute;
  margin: -1px;
  padding: 0;
  height: 1px;
  width: 1px;
  z-index: -1;
  overflow: hidden;
  clip: rect(0 0 0 0);
  clip: rect(0, 0, 0, 0);
}
